import{_ as h}from"./cover-BadZ7aH7.js";import{_ as i,r as n,o as c,c as s,a as d,b as e,w as r,d as t,e as a}from"./app-BmOWUrgV.js";const u={},_=a('<h2 id="簡介" tabindex="-1"><a class="header-anchor" href="#簡介"><span>簡介</span></a></h2><img src="'+h+'" style="width:28%;"><p>這本書是關於軟體設計的：如何將複雜的軟體系統分解成模組（如類和方法），以便這些模組可以相對獨立地實現。首先，這本書介紹了軟體設計的基本問題，也就是對複雜性的管理。然後，它討論了關於如何處理軟體設計過程的一些哲學問題，並提出了一系列可以在軟體設計過程中應用的設計原則。本書還介紹了一些可用來識別設計問題的危險訊號。您可以透過應用本書中的想法來減少大型軟體系統的複雜性，以便您可以更快和更低成本地編寫軟體。</p><h2 id="目錄" tabindex="-1"><a class="header-anchor" href="#目錄"><span>目錄</span></a></h2>',4),p=d("h2",{id:"翻譯說明",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#翻譯說明"},[d("span",null,"翻譯說明")])],-1),m={href:"https://github.com/yingang/aposd-zh",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/yingang/aposd-zh/tree/main/docs#%E7%BF%BB%E8%AF%91%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/gdut-yy",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/liquid207",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/wanghuanwei",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/luojiego",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/BlackGlory",target:"_blank",rel:"noopener noreferrer"},x={href:"https://web.stanford.edu/~ouster/cgi-bin/book.php",target:"_blank",rel:"noopener noreferrer"},y=a('<ul><li>第 6 章（“通用的模組是更深的”）的內容有相對較多的更新（作者自述在第一版出版後，對選擇通用設計的重要性有了更清晰的認識），同時也吸收了第一版中第 9.7 節和第 10.9 節的內容。</li><li>第 9 章和第 12 章增加了一些內容，主要對比了 Robert Martin 所著《程式碼整潔之道》中的設計哲學（作者自述在諸如方法長度和註釋的角色等方面與對方的觀點有顯著的分歧）。</li><li>第 21 章（“決定什麼是重要的”）是新增的章節，主要介紹好的軟體設計如何將重要的事情和不重要的事情區分開，並更多關注在重要的事情上。</li></ul><p>如果您在閱讀過程中，發現有翻譯不當的地方，或者有其他建議，歡迎提交相應的 PR 或 Issue。</p><p>另外，繁體中文的翻譯版本是基於 <code>opencc</code> 使用 Python 指令碼自動生成的，如果發現有處理不當的內容，請針對該指令碼或對應的簡體內容提交 PR 或 Issue。</p><h2 id="術語翻譯" tabindex="-1"><a class="header-anchor" href="#術語翻譯"><span>術語翻譯</span></a></h2><p>翻譯是個比較困難的事情，除了個人水平有限，也有很多見仁見智的地方，所以這裡先列出一些術語的翻譯選擇和背後的考慮因素，以供參考，並至少在本書籍的翻譯過程中保持相對統一，也歡迎提 Issue 探討。</p><table><thead><tr><th>英文</th><th>中文</th><th>說明</th></tr></thead><tbody><tr><td>bug</td><td>缺陷 / 程式碼缺陷</td><td>沒有用“錯誤”是希望避免與 error 等術語的翻譯混淆</td></tr><tr><td>change</td><td>變更</td><td>針對程式碼的時候，更多使用“變更”而不是“改變”，但根據實際的上下文而定</td></tr><tr><td>change amplification</td><td>變更放大</td><td>同前</td></tr><tr><td>classitis</td><td>多類症</td><td></td></tr><tr><td>cognitive load</td><td>認知負荷</td><td></td></tr><tr><td>complexity</td><td>複雜性</td><td>沒有用“複雜度”</td></tr><tr><td>conjoined methods</td><td>連體方法</td><td></td></tr><tr><td>deep module / class</td><td>深模組 / 深類</td><td>沒有用“深層”是希望避免與 layer 和 level 等術語的翻譯混淆</td></tr><tr><td>define error out of existence</td><td>透過定義來規避錯誤</td><td></td></tr><tr><td>dependency / dependencies</td><td>依賴性 / 依賴項</td><td></td></tr><tr><td>dispatcher</td><td>分發器</td><td>沒有用“排程器”是希望避免與 scheduler 等術語的翻譯混淆</td></tr><tr><td>exception masking</td><td>異常遮蔽</td><td></td></tr><tr><td>exception aggregation</td><td>異常聚合</td><td></td></tr><tr><td>formal / informal</td><td>形式化的 / 非形式化的</td><td></td></tr><tr><td>GUI</td><td>圖形介面 / 圖形使用者介面</td><td></td></tr><tr><td>hierarchical</td><td>層次化的</td><td></td></tr><tr><td>information leakage</td><td>資訊洩露</td><td>沒有用“洩漏”</td></tr><tr><td>layer / level</td><td>層 / 層級</td><td></td></tr><tr><td>mindset</td><td>思維方式 / 思維</td><td></td></tr><tr><td>obscurity</td><td>模糊性/模糊項</td><td></td></tr><tr><td>pass-through</td><td>透傳</td><td>用於“透傳方法”、“透傳變數”、“透傳引數”等場景</td></tr><tr><td>public method / variables</td><td>公有方法 / 公有變數</td><td>沒有用“公開”是希望與 expose 和 exposure 等術語的翻譯混淆</td></tr><tr><td>red flag</td><td>危險訊號</td><td></td></tr><tr><td>selection</td><td>區域選擇 / 選擇的區域 / 所選區域</td><td>影象介面文字編譯器中的示例，直接翻譯成“選擇”會不太清晰</td></tr><tr><td>shallow module / class</td><td>淺模組 / 淺類</td><td>沒有用“淺層”，和 deep 的翻譯選擇是同樣的原因</td></tr><tr><td>strategic programming / approach</td><td>戰略式程式設計 / 戰略式方法</td><td></td></tr><tr><td>tactical programming / approach</td><td>戰術式程式設計 / 戰術式方法</td><td></td></tr><tr><td>taking it too far</td><td>做過頭了</td><td></td></tr><tr><td>unknown unknowns</td><td>未知的未知</td><td></td></tr><tr><td>waterfall method / model</td><td>瀑布式方法 / 瀑布式模型</td><td></td></tr><tr><td>web browser / server</td><td>Web 瀏覽器 / Web 伺服器</td><td>沒有用“網路”或“網頁”是希望避免與 network 和 web page 等術語的翻譯混淆，就保留英文了</td></tr></tbody></table>',6);function v(E,B){const l=n("RouteLink"),o=n("ExternalLinkIcon");return c(),s("div",null,[_,d("ul",null,[d("li",null,[e(l,{to:"/zh-tw/preface.html"},{default:r(()=>[t("前言")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch01.html"},{default:r(()=>[t("第 1 章 介紹")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch02.html"},{default:r(()=>[t("第 2 章 複雜性的本質")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch03.html"},{default:r(()=>[t("第 3 章 能工作的程式碼是不夠的")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch04.html"},{default:r(()=>[t("第 4 章 模組應該是深的")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch05.html"},{default:r(()=>[t("第 5 章 資訊隱藏和資訊洩露")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch06.html"},{default:r(()=>[t("第 6 章 通用的模組是更深的")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch07.html"},{default:r(()=>[t("第 7 章 不同的層級，不同的抽象")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch08.html"},{default:r(()=>[t("第 8 章 下沉複雜性")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch09.html"},{default:r(()=>[t("第 9 章 在一起更好還是分開更好？")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch10.html"},{default:r(()=>[t("第 10 章 透過定義來規避錯誤")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch11.html"},{default:r(()=>[t("第 11 章 設計兩次")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch12.html"},{default:r(()=>[t("第 12 章 不寫註釋的四個藉口")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch13.html"},{default:r(()=>[t("第 13 章 註釋應該描述程式碼中不明顯的內容")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch14.html"},{default:r(()=>[t("第 14 章 選取名稱")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch15.html"},{default:r(()=>[t("第 15 章 先寫註釋")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch16.html"},{default:r(()=>[t("第 16 章 修改現有的程式碼")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch17.html"},{default:r(()=>[t("第 17 章 一致性")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch18.html"},{default:r(()=>[t("第 18 章 程式碼應該是顯而易見的")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch19.html"},{default:r(()=>[t("第 19 章 軟體發展趨勢")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch20.html"},{default:r(()=>[t("第 20 章 效能設計")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch21.html"},{default:r(()=>[t("第 21 章 決定什麼是重要的")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/ch22.html"},{default:r(()=>[t("第 22 章 結論")]),_:1})]),d("li",null,[e(l,{to:"/zh-tw/summary.html"},{default:r(()=>[t("總結")]),_:1})])]),p,d("p",null,[t("原書第二版相對於第一版的內容變更不多，此翻譯版本整體是在"),d("a",m,[t("第一版翻譯"),e(o)]),t("的基礎上增量更新而來，相關的歷史可參見"),d("a",f,[t("第一版的翻譯說明"),e(o)]),t("，在我參與校訂之前， 主要的翻譯貢獻者包括 "),d("a",g,[t("gdut-yy"),e(o)]),t("、"),d("a",w,[t("liquid207"),e(o)]),t("、"),d("a",b,[t("wanghuanwei"),e(o)]),t("、"),d("a",z,[t("luojiego"),e(o)]),t(" 和 "),d("a",k,[t("BlackGlory"),e(o)]),t("。")]),d("p",null,[t("第二版的主要變更如下（翻譯自"),d("a",x,[t("原作者網站的說明"),e(o)]),t("）：")]),y])}const N=i(u,[["render",v],["__file","index.html.vue"]]),L=JSON.parse('{"path":"/zh-tw/","title":"","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"簡介","slug":"簡介","link":"#簡介","children":[]},{"level":2,"title":"目錄","slug":"目錄","link":"#目錄","children":[]},{"level":2,"title":"翻譯說明","slug":"翻譯說明","link":"#翻譯說明","children":[]},{"level":2,"title":"術語翻譯","slug":"術語翻譯","link":"#術語翻譯","children":[]}],"git":{"updatedTime":1712125785000},"filePathRelative":"zh-tw/README.md"}');export{N as comp,L as data};
